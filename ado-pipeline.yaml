variables:
  firstDeploy: true
  command: apply
  arguments: /path/to/manifest.yml

trigger:
- main

pool: 
  vmImage: ubuntu-latest

stages:
  - stage: Configuration
    jobs:
    - job: Configuration
      steps:
      - task: DockerInstaller@0
        displayName: Installing Docker
        inputs:
          dockerVersion: '17.09.0-ce'
      - task: KubectlInstaller@0
        displayName: Installing kubectl 
        inputs:
          kubectlVersion: 'latest'
          
  - stage: Build
    displayName: 'Building and pushing images'
    jobs:
      - job: Build
        steps:
        # OPTION 1: using docker-compose, if a docker-compose.yml exists
        #- task: DockerCompose@0
        #  displayName: 'Building images'
        #  inputs:
        #    containerregistrytype: 'Container Registry'
        #    dockerRegistryEndpoint: 'jfrog-artifactory'
        #    dockerComposeFile: '**/docker-compose.yml'
        #    action: 'Build services'
        #    # fully qualified name set by default

        #- task: DockerCompose@0
        #  displayName: 'Pushing images'
        #  inputs:
        #    containerregistrytype: 'Container Registry'
        #    dockerRegistryEndpoint: 'jfrog-artifactory'
        #    dockerComposeFile: '**/docker-compose.yml'
        #    action: 'Push services'

        # OPTION 2: multiple Docker tasks, a buildAndPush for each image to build and push
        - task: ArtifactoryDocker@1
          inputs:
            command: 'pull'
            artifactoryService: 'my-jfrog-artifactory-repo'
            sourceRepo: 'default-docker/'
            imageName: 'hello'
        
        - task: Docker@2
          inputs:
            containerRegistry: 'docker-jfrog-artifactory'
            repository: 'default-docker'
            command: 'build'
            Dockerfile: '**/Dockerfile'
            arguments: 'build-arg BASEIMAGE="hello"'
        
        - task: ArtifactoryDocker@1
          inputs:
            command: 'push'
            artifactoryService: 'my-jfrog-artifactory-repo'
            targetRepo: 'default-docker'
            imageName: 'test-hello:$(Build.BuildId)'

  - stage: Deploy
    dependsOn: Build
    displayName: 'Updating cluster resources'
    jobs:
    - job: Deploy
      steps:
      #- script:
          #${{ if firstDeploy }}:
          #  echo "##vso[task.setvariable variable=firstDeploy;]false"
          #${{ else }}: 
          #  echo "##vso[task.setvariable variable=command;]set"
          #  echo "##vso[task.setvariable variable=arguments;]'image RESOURCE CONTAINERS=IMGNAME:TAG'"
      # Deploys containers
      - task: Kubernetes@1
        inputs:
          connectionType: 'Kubernetes Service Connection'
          kubernetesServiceEndpoint: 'my_aks_connection'
          command: 'apply'
          arguments: '-f ./path/to/manifests/'
          secretType: 'dockerRegistry'
          containerRegistryType: 'Container Registry'
          dockerRegistryEndpoint: 'docker-jfrog-artifactory'
