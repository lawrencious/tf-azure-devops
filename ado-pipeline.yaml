variables:
  firstDeploy: 'true'
  command: 'apply'
  arguments: '/path/to/manifest.yml'

trigger:
- main

pool: 
  vmImage: ubuntu-latest

stages:
  - stage: Configuration
    jobs:
    - job: Configuration
      steps:
      - task: DockerInstaller@0
        displayName: Installing Docker
        inputs:
          dockerVersion: '17.09.0-ce'
      - task: KubectlInstaller@0
        displayName: Installing kubectl 
        inputs:
          kubectlVersion: 'latest'
          
  - stage: Build
    displayName: 'Building and pushing images'
    jobs:
      - job: Build
        steps:
        # OPTION 1: using docker-compose, if a docker-compose.yml exists
        #- task: DockerCompose@0
        #  displayName: 'Building images'
        #  inputs:
        #    containerregistrytype: 'Container Registry'
        #    dockerRegistryEndpoint: 'jfrog-artifactory'
        #    dockerComposeFile: '**/docker-compose.yml'
        #    action: 'Build services'
        #    # fully qualified name set by default

        #- task: DockerCompose@0
        #  displayName: 'Pushing images'
        #  inputs:
        #    containerregistrytype: 'Container Registry'
        #    dockerRegistryEndpoint: 'jfrog-artifactory'
        #    dockerComposeFile: '**/docker-compose.yml'
        #    action: 'Push services'

        # OPTION 2: multiple Docker tasks, a buildAndPush for each image to build and push
        
        - task: Docker@2
          displayName: 'Building and pushing to JFrog'
          inputs:
            containerRegistry: 'docker-jfrog-artifactory'
            repository: 'default-docker-remote'
            command: 'build' #'buildAndPush'
            Dockerfile: '**/Dockerfile'
            # tag: $(Build.BuildId) by default, BuildId increased each time

  - stage: Deploy
    dependsOn: Build
    displayName: 'Updating cluster resources'
    jobs:
    - job: Deploy
      steps:
      - script:
          echo "BABABUI"
          if [ $firstDeploy == 'true' ]
          then
            echo "##vso[task.setvariable variable=firstDeploy;]'false'"
            echo "Set firstDeploy to ${firstDeploy}"
          else 
            echo "##vso[task.setvariable variable=command;]'set'"
            echo "##vso[task.setvariable variable=arguments;]'image RESOURCE CONTAINERS=IMGNAME:TAG'"
          fi
      # Deploys containers
      - task: Kubernetes@1
        inputs:
          connectionType: 'Kubernetes Service Connection'
          kubernetesServiceEndpoint: 'my_aks_connection'
          command: 'apply'
          arguments: '-f ./path/to/manifests/'
          secretType: 'dockerRegistry'
          containerRegistryType: 'Container Registry'
          dockerRegistryEndpoint: 'docker-jfrog-artifactory'
