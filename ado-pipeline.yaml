trigger:
- main

pool: 
  vmImage: ubuntu-latest

stages:
  - stage: Build
    displayName: 'Building and pushing images'
    jobs:
      - job: Build
        steps:
        # OPTION 1: using docker-compose, if a docker-compose.yml exists
        - task: DockerCompose@0
          displayName: 'Building images'
          inputs:
            containerregistrytype: 'Container Registry'
            dockerRegistryEndpoint: 'jfrog-artifactory'
            dockerComposeFile: '**/docker-compose.yml'
            action: 'Build services'
            # fully qualified name set by default

        - task: DockerCompose@0
          displayName: 'Pushing images'
          inputs:
            containerregistrytype: 'Container Registry'
            dockerRegistryEndpoint: 'jfrog-artifactory'
            dockerComposeFile: '**/docker-compose.yml'
            action: 'Push services'

        # OPTION 2: multiple Docker tasks, a buildAndPush for each image to build and push
        - task: Docker@2
          displayName: 'Build and push container image'
          inputs:
            containerRegistry: 'jfrog-artifactory'
            repository: 'jfrog-artifactory-repository'
            command: 'buildAndPush'
            dockerfile: '**/Dockerfile'

  - stage: Deploy
    dependsOn: Build
    displayName: 'Updating cluster resources'
    jobs:
    - job: Deploy
      steps:
      # Deploys containers
      - task: Kubernetes@1
        inputs:
          connectionType: 'Kubernetes Service Connection'
          kubernetesServiceEndpoint: 'my_aks_connection'
          command: 'apply'
          arguments: '-f ./path/to/manifests/'
          secretType: 'dockerRegistry'
          containerRegistryType: 'Container Registry'
          dockerRegistryEndpoint: 'docker-jfrog-artifactory'
