pool:

steps:
# Building and pushing images to image repository
- task: Docker@2
  inputs:
    containerRegistry: 'docker-jfrog-artifactory'
    repository: 'default-docker-remote/'
    command: 'buildAndPush'
    dockerfile: '**/Dockerfile'

- task: Docker@0
  displayName: 'Build a container image'
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryConnection: 'docker-jfrog-artifactory'

- task: Docker@0
  displayName: 'Push a container image'
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryConnection: 'docker-jfrog-artifactory'
    action: 'Push an image'

# Publishing artifacts
- task: PublishBuildArtifacts@1
  inputs:
    targetPath: $(System.DefaultWorkingDirectory)
    artifactName: fooImg

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)'
    publishLocation: 'pipeline'
    #artifactName not set -> by default, set to unique ID within job scope

- task: DownloadPipelineArtifact@2
  inputs:
    buildType: 'current'
    itemPattern: '**' # Recursive matching
    targetPath: '$(Pipeline.Workspace)'

- task: DownloadBuildArtifacts@1
  inputs:
    buildType: 'specific'
    project: 'd7543abd-f5b4-4ef1-8ccf-785ffc43e42c'
    pipeline: '8'
    buildVersionToDownload: 'latest'
    downloadType: 'specific'
    downloadPath: '$(System.ArtifactsDirectory)'

- task: KubernetesManifest@0
  inputs:
    action: 'createSecret'
    kubernetesServiceConnection: 'my_aks_connection'
    namespace: 'default'
    secretType: 'dockerRegistry'
    secretName: 'foo_secret'
    dockerRegistryEndpoint: 'docker-jfrog-artifactory'

- task: KubernetesManifest@0
  inputs:
    action: 'deploy'
    kubernetesServiceConnection: 'my_aks_connection'
    namespace: 'default'
    manifests: './*yml'
    
- task: KubernetesManifest@0
  inputs:
    action: 'deploy'
    kubernetesServiceConnection: 'my_aks_connection'
    namespace: 'default'
    manifests: | 
      ./service.yaml
    containers: | 
      foo:test
    imagePullSecrets: | 
      foo_secret

